version: 0.2

phases:
  pre_build:
    commands:
      # Información de ECR
      - REGISTRY_URI=891377347851.dkr.ecr.eu-west-1.amazonaws.com/mywebapploadbalancer
      - IMAGE_NAME=mywebapploadbalancer
      - REGION=eu-west-1
      # Información de ECS
      - CONTAINER_NAME=MyWebAppContainer
      # -----------------------
      - IMAGE=$REGISTRY_URI/$IMAGE_NAME
      - COMMIT=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - echo "Logging in to Amazon ECR..."
      - echo "Registry URI: $REGISTRY_URI"
      - echo "Region: $REGION"
      - echo "Running aws ecr get-login-password..."
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY_URI
      - echo "Login completed"
  build:
    commands:
      - echo "Building Docker image..."
      - docker build --tag $IMAGE .
      - docker tag $IMAGE $IMAGE:$COMMIT
      - echo "Docker image built and tagged: $IMAGE and $IMAGE:$COMMIT"
  post_build:
    commands:
      - echo "Pushing Docker image..."
      - docker push $IMAGE
      - docker push $IMAGE:$COMMIT
      - echo "Docker images pushed: $IMAGE and $IMAGE:$COMMIT"
      # Crear imagedefinitions.json. Esto es usado por ECS para saber qué imagen de Docker usar.
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $IMAGE:$COMMIT > imagedefinitions.json
      - echo "imagedefinitions.json created"
artifacts:
  files:
    # Poner imagedefinitions.json en el archivo zip de artefactos
    - imagedefinitions.json
